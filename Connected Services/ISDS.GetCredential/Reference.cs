//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ISDS.GetCredential
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://agw-as.cz/ats-ws/v1", ConfigurationName="ISDS.GetCredential.EndSession")]
    public interface EndSession
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<ISDS.GetCredential.authConfirmationResponse> authConfirmationAsync(ISDS.GetCredential.authConfirmationRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://agw-as.cz/ats-ws/v1")]
    public partial class authConfirmationRequestType
    {
        
        private string sessionIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string sessionId
        {
            get
            {
                return this.sessionIdField;
            }
            set
            {
                this.sessionIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://agw-as.cz/ats-ws/v1")]
    public partial class attributeType
    {
        
        private string nameField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string value
        {
            get
            {
                return this.valueField;
            }
            set
            {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://agw-as.cz/ats-ws/v1")]
    public partial class authConfirmationResponseType
    {
        
        private authConfirmationResponseStatusType statusField;
        
        private string userRequestIpField;
        
        private attributeType[] attributesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public authConfirmationResponseStatusType status
        {
            get
            {
                return this.statusField;
            }
            set
            {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string userRequestIp
        {
            get
            {
                return this.userRequestIpField;
            }
            set
            {
                this.userRequestIpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("attribute", IsNullable=false)]
        public attributeType[] attributes
        {
            get
            {
                return this.attributesField;
            }
            set
            {
                this.attributesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://agw-as.cz/ats-ws/v1")]
    public enum authConfirmationResponseStatusType
    {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        SYSTEM_ERROR,
        
        /// <remarks/>
        SESSION_NOT_FOUND,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class authConfirmationRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="authConfirmationRequest", Namespace="http://agw-as.cz/ats-ws/v1", Order=0)]
        public ISDS.GetCredential.authConfirmationRequestType authConfirmationRequest1;
        
        public authConfirmationRequest()
        {
        }
        
        public authConfirmationRequest(ISDS.GetCredential.authConfirmationRequestType authConfirmationRequest1)
        {
            this.authConfirmationRequest1 = authConfirmationRequest1;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class authConfirmationResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="authConfirmationResponse", Namespace="http://agw-as.cz/ats-ws/v1", Order=0)]
        public ISDS.GetCredential.authConfirmationResponseType authConfirmationResponse1;
        
        public authConfirmationResponse()
        {
        }
        
        public authConfirmationResponse(ISDS.GetCredential.authConfirmationResponseType authConfirmationResponse1)
        {
            this.authConfirmationResponse1 = authConfirmationResponse1;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface EndSessionChannel : ISDS.GetCredential.EndSession, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class EndSessionClient : System.ServiceModel.ClientBase<ISDS.GetCredential.EndSession>, ISDS.GetCredential.EndSession
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public EndSessionClient() : 
                base(EndSessionClient.GetDefaultBinding(), EndSessionClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.EndSessionSoap11.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EndSessionClient(EndpointConfiguration endpointConfiguration) : 
                base(EndSessionClient.GetBindingForEndpoint(endpointConfiguration), EndSessionClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EndSessionClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(EndSessionClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EndSessionClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(EndSessionClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public EndSessionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ISDS.GetCredential.authConfirmationResponse> ISDS.GetCredential.EndSession.authConfirmationAsync(ISDS.GetCredential.authConfirmationRequest request)
        {
            return base.Channel.authConfirmationAsync(request);
        }
        
        public System.Threading.Tasks.Task<ISDS.GetCredential.authConfirmationResponse> authConfirmationAsync(ISDS.GetCredential.authConfirmationRequestType authConfirmationRequest1)
        {
            ISDS.GetCredential.authConfirmationRequest inValue = new ISDS.GetCredential.authConfirmationRequest();
            inValue.authConfirmationRequest1 = authConfirmationRequest1;
            return ((ISDS.GetCredential.EndSession)(this)).authConfirmationAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.EndSessionSoap11))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Certificate;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.EndSessionSoap11))
            {
                return new System.ServiceModel.EndpointAddress("https://cert.mojedatovaschranka.cz/asws/extIs2Endpoint");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return EndSessionClient.GetBindingForEndpoint(EndpointConfiguration.EndSessionSoap11);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return EndSessionClient.GetEndpointAddress(EndpointConfiguration.EndSessionSoap11);
        }
        
        public enum EndpointConfiguration
        {
            
            EndSessionSoap11,
        }
    }
}
